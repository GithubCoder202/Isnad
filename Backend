mkdir isnadhub-backend
cd isnadhub-backend
npm init -y
npm install express mongoose cors dotenv jsonwebtoken cookie-parser axios
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
require('dotenv').config();

const app = express();
app.use(express.json());
app.use(cors());
app.use(require('cookie-parser')());

// Connect to MongoDB
mongoose.connect(process.env.MONGO_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true
}).then(() => console.log("MongoDB connected"))
  .catch(err => console.log(err));

// Routes
app.use('/api/articles', require('./routes/articles'));
app.use('/api/auth', require('./routes/auth'));
app.use('/api/verify', require('./routes/verify'));

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
const mongoose = require('mongoose');

const ArticleSchema = new mongoose.Schema({
    title: String,
    description: String,
    category: String,
    date: String,
    image: String,
    type: { type: String, enum: ['news', 'history'] },
    verification: {
        bias: String,
        verified: Boolean,
        sourceRating: String
    },
    comments: [{ text: String, user: String }]
});

module.exports = mongoose.model('Article', ArticleSchema);
const express = require('express');
const router = express.Router();
const Article = require('../models/Article');

// Get all articles
router.get('/', async (req, res) => {
    const articles = await Article.find();
    res.json(articles);
});

// Add article
router.post('/', async (req, res) => {
    const newArticle = new Article(req.body);
    await newArticle.save();
    res.json({ message: 'Article added' });
});

module.exports = router;
const express = require('express');
const router = express.Router();

// Simulate Verification
router.post('/', async (req, res) => {
    const { url } = req.body;

    // Simulate delay & response
    res.json({
        accuracy: "87%",
        summary: "Discusses environmental stewardship, missing some Islamic citations.",
        references: [
            { type: "Hadith", quote: "The Earth is green and beautiful...", source: "Muslim" },
            { type: "Verse", quote: "Do not waste water...", source: "Quran 6:141" }
        ],
        historicalParallels: [
            "Al-Andalus irrigation systems",
            "Hima reserves",
            "Al-Jahiz's ecological ethics"
        ]
    });
});

module.exports = router;
PORT=5000
MONGO_URI=mongodb+srv://<your-mongo-user>:<password>@cluster.mongodb.net/isnadhub
fetch('http://localhost:5000/api/articles')
  .then(res => res.json())
  .then(data => {
      console.log(data); // Populate your HTML dynamically
  });
